Here are two tables with slightly different initial conditions. The first column is Y=ln(0.01/x) and the second column is the dipole size [GeV^-1] and the third column is T = 1-1/Nc*\Tr[V(x)V^\dagger(y)], so the N in Sanjin's paper is computed by N= 1 -T. That rcBK table is for the proton. I currently don't have one of the nucleus, but we could generate one later.
For the nucleus you can use the following approximation
N_A = (N_p)^ c
where N_A is the dipole for the nucleus, and N_p is the dipole for the proton, and c is the proportionality factor between saturation scales squared, so you can take c ~ 2 or 3

When Fit the rcBK table:
For All_fit_paras_log_2_5_final_fit_rcBK_MV_Heikki_table, the fit function is:
    tidle0 = AValues[0] * ( -1. * pow(kpmag, BValues[0]) * CValues[0] + DValues[0]) +
                          EValues[0] * pow(kpmag, FValues[0]);
                          
For All_fit_paras_log_2_5_final_fit_rcBK_MVgamma_Heikki_table, the fit function is:
def model_func2d(k, A, B, C, D, E, F):
    return  log(A * exp(-k**B * C + D) + E*k**F)
Fit to the Log(N(K)*K*K)

def model_func2d(k, A, B, C, D, E, F):
    return  (A * exp(-k**B * C + D) + E*k**F)
    
